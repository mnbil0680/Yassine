---
import type { HTMLAttributes } from "astro/types"

interface Props {
  color?: string
  gradient?: boolean
  size?: string
  verticalAlign?: string
}

const {
  color = "currentcolor",
  gradient,
  size,
  verticalAlign = "middle",
} = Astro.props

const attrs: HTMLAttributes<"svg"> = {}
attrs.style = { "--vertical-align": verticalAlign }
if (size) attrs.style["--size"] = size

const gradientId =
  "icon-gradient-" + Math.round(Math.random() * 10e12).toString(36)
---

<svg
  xmlns="http://www.w3.org/2000/svg"
  width="40"
  height="40"
  viewBox="0 0 256 256"
  aria-hidden="true"
  stroke={gradient ? `url(#${gradientId})` : color}
  fill={gradient ? `url(#${gradientId})` : color}
  {...attrs}
>
  <g>
    <path d="M248,92.68a15.86,15.86,0,0,0-4.69-11.31L174.63,12.68a16,16,0,0,0-22.63,0L123.57,41.11l-58,21.77A16.06,16.06,0,0,0,55.35,75.23L32.11,214.68A8,8,0,0,0,40,224a8.4,8.4,0,0,0,1.32-.11l139.44-23.24a16,16,0,0,0,12.35-10.17l21.77-58L243.31,104A15.87,15.87,0,0,0,248,92.68Zm-69.87,92.19L63.32,204l47.37-47.37a28,28,0,1,0-11.32-11.32L52,192.7,71.13,77.86,126,57.29,198.7,130ZM112,132a12,12,0,1,1,12,12A12,12,0,0,1,112,132Zm96-15.32L139.31,48l24-24L232,92.68Z"/>
  </g>
  {
    gradient && (
      <linearGradient
        id={gradientId}
        x1="23"
        x2="235"
        y1="43"
        y2="202"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="var(--gradient-stop-1)" />
        <stop offset=".5" stop-color="var(--gradient-stop-2)" />
        <stop offset="1" stop-color="var(--gradient-stop-3)" />
      </linearGradient>
    )
  }
</svg>

<style>
  svg {
    width: var(--size, 1em);
    height: var(--size, 1em);
    vertical-align: var(--vertical-align, middle);
  }
</style>
